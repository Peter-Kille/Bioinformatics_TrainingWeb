---
title-block-style: default
title-block-banner: darkred
title: "Hybrid Assemblies"
subtitle: "When short read just doesn't cut it"
author: "Professor Peter Kille"
date: today
affiliation: "Cardiff University"
---

# Nanopore Error Correction with FMLRC

## Data

Illumina Data bug_illumina_reads_1.fastq\
bug_illumina_reads_2.fastq Nanopore Reads (corrected) bug_nanopore_reads.fasta

## Tools

FMLRC: Paper - https://bmcbioinformatics.biomedcentral.com/articles/10.1186/s12859-018-2051-3 FMLRC: fmlrc github home page - https://github.com/holtjma/fmlrc FMLRC: Quick Start Guide - https://github.com/holtjma/fmlrc/wiki/Quick-start-test

## FMLRC Software Installation

Python 2.7 - tested on 2.7.6; assumes pip is installed as well

C++ compiler - tested with Apple LLVM version 8.1.0 (clang-802.0.42); should work with most up-to-date compilers

## Installation:

### Download and install msbwt


    pip install msbwt 

### Download and build ropebwt2


    git clone https://github.com/lh3/ropebwt2.git 
    cd ropebwt2 
    make 
    d ~/ 

### Download and build fmlrc


    git clone https://github.com/holtjma/fmlrc.git 
    cd fmlrc 
    make 
    cd ~/ 

### Execute Error correction

Usage:

    fmlrc [options] <comp_msbwt.npy> <long_reads.fa> <corrected_reads.fa>

Options:

    -h        print help menu 
    -v        print version number and exit 
    -k INT    small k-mer size (default: 21) 
    -K INT    large K-mer size (default: 59), set K=k for single pass 
    -p INT    number of correction threads 
    -b INT    index of read to start with (default: 0) 
    -e INT    index of read to end with (default: end of file) 
    -m INT    absolute minimum count to consider a path (default: 5) 
    -f FLOAT  dynamic minimum fraction of median to consider a path (default: .10) 
    -B INT    set branch limit to <INT>*<k or K> (default: 4) 
    -i        build a sampled FM-index instead of bit arrays 
    -F INT    FM-index is sampled every 2**<INT> values (default: 8); requires \-i 
    -V        verbose output 

::: callout-important
## Excerise: FMLRC Error Correction

### Process and index short reads

    awk "NR % 4 == 2" file_name_*.fq | sort -T ./temp | tr NT TN | ~/ropebwt2/ropebwt2 -LR | tr NT TN | msbwt convert ./file_name_msbwt

### Perform Error Correction

    ~/fmlrc/fmlrc -p 8 -V -e [No. of reads] ./file_name_msbwt/comp_msbwt.npy ./nanopore_reads.fasta ./corrected_final.fa 
:::

# Hybrid Assembly with SPades

## Data

    Illumina Data 
    bug_illumina_reads_1.fastq   
    bug_illumina_reads_2.fastq 
    Nanopore Reads (corrected) 
    bug_nanopore_reads_corrected.fasta (you shoould have generated these from previously)

## Tools

SPAdes -- instal using module load

    Usage: spades.py [options\ -o <output_dir>

### Basic options:

    -o <output_dir> directory to store all the resulting files (required) 
    --sc                this flag is required for MDA (single-cell) data 
    --meta          this flag is required for metagenomic sample data 
    --rna               this flag is required for RNA-Seq data 
    --plasmid           runs plasmidSPAdes pipeline for plasmid detection 
    --iontorrent        this flag is required for IonTorrent data 
    --test          runs SPAdes on toy dataset 
    -h/--help           prints this usage message 
    -v/--version        prints version 

### Input data:

    --12 <filename> file with interlaced forward and reverse paired-end reads 
    -1 <filename>       file with forward paired-end reads 
    -2 <filename>       file with reverse paired-end reads 
    -s <filename>       file with unpaired reads 
    --pe<#>-12 <filename>   file with interlaced reads for paired-end library number <#> (<#> = 1,2,..,9) 
    --pe<#>-1  <filename>   file with forward reads for paired-end library number <#> (<#> = 1,2,..,9) 
    --pe<#>-2  <filename>   file with reverse reads for paired-end library number <#> (<#> = 1,2,..,9) 
    --pe<#>-s  <filename>   file with unpaired reads for paired-end library number <#> (<#> = 1,2,..,9) 
    --pe<#>-<or>    orientation of reads for paired-end library number <#> (<#> = 1,2,..,9; <or> = fr, rf, ff) 
    --s<#>  <filename>  file with unpaired reads for single reads library number <#> (<#> = 1,2,..,9)     --mp<#>-12  <filename>  file with interlaced reads for mate-pair library number <#> (<#> = 1,2,..,9) 
    --mp<#>-1  <filename>   file with forward reads for mate-pair library number <#> (<#> = 1,2,..,9)     --mp<#>-2  <filename>   file with reverse reads for mate-pair library number <#> (<#> = 1,2,..,9)     --mp<#>-s  <filename>   file with unpaired reads for mate-pair library number <#> (<#> = 1,2,..,9) 
    --mp<#>-<or>    orientation of reads for mate-pair library number <#> (<#> = 1,2,..,9; <or> = fr, rf, ff) 
    --hqmp<#>-12  <filename>    file with interlaced reads for high-quality mate-pair library number <#> (<#> = 1,2,..,9) 
    --hqmp<#>-1  <filename> file with forward reads for high-quality mate-pair library number <#> (<#> = 1,2,..,9) 
    --hqmp<#>-2  <filename> file with reverse reads for high-quality mate-pair library number <#> (<#> = 1,2,..,9) 
    --hqmp<#>-s  <filename> file with unpaired reads for high-quality mate-pair library number <#> (<#> = 1,2,..,9) 
    --hqmp<#>-<or>  orientation of reads for high-quality mate-pair library number <#> (<#> = 1,2,..,9; <or> = fr, rf, ff) 
    --nxmate<#>-1  <filename>   file with forward reads for Lucigen NxMate library number <#> (<#> = 1,2,..,9) 
    --nxmate<#>-2  <filename>   file with reverse reads for Lucigen NxMate library number <#> (<#> = 1,2,..,9) 
    --sanger  <filename>    file with Sanger reads 
    --pacbio  <filename>    file with PacBio reads 
    --nanopore  <filename>  file with Nanopore reads 
    --tslr  <filename>  file with TSLR-contigs 
    --trusted-contigs  <filename>   file with trusted contigs 
    --untrusted-contigs  <filename> file with untrusted contigs 

### Pipeline options:

    --only-error-correction runs only read error correction (without assembling) 
    --only-assembler    runs only assembling (without read error correction) 
    --careful   tries to reduce number of mismatches and short indels 
    --continue  continue run from the last available check-point 
    --restart-from  <cp>    restart run with updated options and from the specified check-point ('ec', 'as', 'k<int>', 'mc') 
    --disable-gzip-output   forces error correction not to compress the corrected reads 
    --disable-rr    disables repeat resolution stage of assembling 

### Advanced options:


        --dataset  <filename>   file with dataset description in YAML format 
        -t/--threads <int>  number of threads 
        [default: 16] 
        -m/--memory <int>   RAM limit for SPAdes in Gb (terminates if exceeded) [default: 250] 
        --tmp-dir <dirname>     directory for temporary files [default: <output_dir>/tmp] 
        -k <int,int,...>        comma-separated list of k-mer sizes (must be odd and less than 128) [default: 'auto'] 
        --cov-cutoff <float>    coverage cutoff value (a positive float number, or 'auto', or 'off') [default: 'off'] 
        --phred-offset  <33 or 64>  PHRED quality offset in the input reads (33 or 64) [default: auto-detect] 
        

::: callout-important
## Excercise: SPades Hybrid

Try and run spades with both the short reads on there own and then using a hybrid assembly with nanopore data, evaluate the resulting assemblies.

Hybrid assembly example command line:


    spades.py -1 Illumina_1.fastq -2 Illumina_2.fastq --nanopore bug_nanopore_reads_corrected.fasta -o assembly_name
:::
